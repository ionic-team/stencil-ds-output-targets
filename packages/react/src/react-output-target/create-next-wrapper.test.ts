import { describe, it, expect } from 'vitest';
import { createStencilNextComponents } from './create-next-wrapper';
import { dedent } from 'ts-dedent';
import { Project } from 'ts-morph';

describe('createComponentWrappers', () => {
  it('should generate a react component wrapper', async () => {
    const code = await createStencilNextComponents({
      components: [
        {
          tagName: 'my-component',
          componentClassName: 'MyComponent',
          events: [
            {
              originalName: 'my-event',
              name: 'myEvent',
              type: 'CustomEvent',
            },
          ],
        } as any,
        {
          tagName: 'my-other-component',
          componentClassName: 'MyOtherComponent',
          events: [],
        } as any,
      ],
    });

    expect(code).toEqual(dedent`'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */
export { MyComponent, MyOtherComponent } from "./components.server";

`);
  });

  it('should generate a react component wrapper', async () => {
    const code = await createStencilNextComponents({
      components: [
        {
          tagName: 'my-component',
          componentClassName: 'MyComponent',
          events: [
            {
              originalName: 'my-event',
              name: 'myEvent',
              type: 'CustomEvent',
            },
          ],
        } as any,
        {
          tagName: 'my-other-component',
          componentClassName: 'MyOtherComponent',
          events: [],
        } as any,
      ],
      esModules: true,
    });

    expect(code).toEqual(dedent`'use client';

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */
export { default as MyComponent } from "./MyComponent";
export { default as MyOtherComponent } from "./MyOtherComponent";

`);
  });
});
