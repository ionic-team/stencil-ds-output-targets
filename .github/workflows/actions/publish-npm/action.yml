name: 'Release'
description: 'Releases a package'
inputs:
  scope:
    description: 'The package to release. Must match a package specified in lerna.json.'
  tag:
    description: 'The tag to publish to on NPM (DRY RUN).'
  preid:
    description: 'The prerelease identifier used when doing a prerelease.'
  working-directory:
    required: true
    description: 'The directory of the package to deploy.'
  token:
    description: 'The NPM authentication token required to publish.'
runs:
  using: 'composite'
  steps:
    - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
    - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version: '20.10.0'
        cache: 'pnpm'
    - name: Install Dependencies
      run: pnpm --filter ${{ inputs.scope }} install
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Run Build
      run: pnpm run build
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Prepare NPM Token
      run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      env:
        NPM_TOKEN: ${{ inputs.token }}
    - name: Publish to NPM
      run: npm publish --tag ${{ inputs.tag }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
