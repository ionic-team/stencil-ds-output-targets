name: 'Output Targets Build'

on:
  workflow_dispatch:

jobs:
  dev-build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.dev-build.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version-file: './package.json'
      - name: Install root dependencies
        run: npm ci
        shell: bash
      - name: Install Dependencies
        run: npx lerna bootstrap --ignore-scripts -- --legacy-peer-deps
        shell: bash
      - name: Prepare NPM Token
        run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # A 1 is required before the timestamp
      # as lerna will fail when there is a leading 0
      # See https://github.com/lerna/lerna/issues/2840
      - name: Create Dev Hash
        run: |
          echo "HASH=1$(git log -1 --format=%H | cut -c 1-7)" >> $GITHUB_ENV
          echo "TIMESTAMP=1$(date +%s)" >> $GITHUB_ENV
        shell: bash
      - name: Create Dev Build
        run: |
          HUSKY_SKIP_HOOKS=1 lerna publish 0.0.1-dev.$(echo "${{ env.TIMESTAMP }}").$(echo "${{ env.HASH }}") --no-verify-access --yes --force-publish='*' --dist-tag dev --no-git-tag-version --no-push --exact
        shell: bash
      - id: dev-build
        run: echo "::set-output name=version::0.0.1-dev.$(echo "${{ env.TIMESTAMP }}").$(echo "${{ env.HASH }}")"
  get-build:
    name: Get your dev build!
    runs-on: ubuntu-latest
    needs: dev-build
    steps:
      - run: echo ${{ needs.dev-build.outputs.version }}
